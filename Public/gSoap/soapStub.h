/* soapStub.h
   Generated by gSOAP 2.8.32 for add.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20832
# error "GSOAP VERSION 20832 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct PropInfoPojo;	/* add.h:3 */
struct TermInfoPojo;	/* add.h:7 */
struct SyndwsadataResponse;	/* add.h:14 */
struct SyndwsadataRequest;	/* add.h:24 */
struct ns__SyndwsadataResponse;	/* add.h:33 */
struct ns__Syndwsadata;	/* add.h:33 */
struct SyndwsaTicketInfoRequest;	/* add.h:37 */
struct SyndwsaTicketInfoResponse;	/* add.h:45 */
struct ns__syndwsaTicketInfoResponse;	/* add.h:53 */
struct ns__syndwsaTicketInfo;	/* add.h:53 */

/* add.h:3 */
#ifndef SOAP_TYPE_PropInfoPojo
#define SOAP_TYPE_PropInfoPojo (8)
/* complex XSD type 'PropInfoPojo': */
struct PropInfoPojo {
      public:
        /** Required element 'propId' of XSD type 'xsd:string' */
        std::string propId;
        /** Required element 'propName' of XSD type 'xsd:string' */
        std::string propName;
      public:
        /** Return unique type id SOAP_TYPE_PropInfoPojo */
        int soap_type() const { return SOAP_TYPE_PropInfoPojo; }
        /** Constructor with member initializations */
        PropInfoPojo()
        {
        }
        /** Friend allocator used by soap_new_PropInfoPojo(struct soap*, int) */
        friend SOAP_FMAC1 PropInfoPojo * SOAP_FMAC2 soap_instantiate_PropInfoPojo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:7 */
#ifndef SOAP_TYPE_TermInfoPojo
#define SOAP_TYPE_TermInfoPojo (10)
/* complex XSD type 'TermInfoPojo': */
struct TermInfoPojo {
      public:
        /** Required element 'termId' of XSD type 'xsd:string' */
        std::string termId;
        /** Required element 'termName' of XSD type 'xsd:string' */
        std::string termName;
        /** Required element 'termIp' of XSD type 'xsd:string' */
        std::string termIp;
        /** Required element 'propId' of XSD type 'xsd:string' */
        std::string propId;
      public:
        /** Return unique type id SOAP_TYPE_TermInfoPojo */
        int soap_type() const { return SOAP_TYPE_TermInfoPojo; }
        /** Constructor with member initializations */
        TermInfoPojo()
        {
        }
        /** Friend allocator used by soap_new_TermInfoPojo(struct soap*, int) */
        friend SOAP_FMAC1 TermInfoPojo * SOAP_FMAC2 soap_instantiate_TermInfoPojo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:14 */
#ifndef SOAP_TYPE_SyndwsadataResponse
#define SOAP_TYPE_SyndwsadataResponse (11)
/* complex XSD type 'SyndwsadataResponse': */
struct SyndwsadataResponse {
      public:
        /** Required element 'responseVersion' of XSD type 'xsd:string' */
        std::string responseVersion;
        /** Required element 'requestCtxUUID' of XSD type 'xsd:string' */
        std::string requestCtxUUID;
        /** Required element 'responseCode' of XSD type 'xsd:string' */
        std::string responseCode;
        /** Required element 'responseExtCode' of XSD type 'xsd:string' */
        std::string responseExtCode;
        /** Required element 'responseMessage' of XSD type 'xsd:string' */
        std::string responseMessage;
        /** Optional element 'lstPropInfo' of XSD type 'PropInfoPojo' */
        std::vector<struct PropInfoPojo> lstPropInfo;
        /** Optional element 'lstTermInfo' of XSD type 'TermInfoPojo' */
        std::vector<struct TermInfoPojo> lstTermInfo;
      public:
        /** Return unique type id SOAP_TYPE_SyndwsadataResponse */
        int soap_type() const { return SOAP_TYPE_SyndwsadataResponse; }
        /** Constructor with member initializations */
        SyndwsadataResponse()
        {
        }
        /** Friend allocator used by soap_new_SyndwsadataResponse(struct soap*, int) */
        friend SOAP_FMAC1 SyndwsadataResponse * SOAP_FMAC2 soap_instantiate_SyndwsadataResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:24 */
#ifndef SOAP_TYPE_SyndwsadataRequest
#define SOAP_TYPE_SyndwsadataRequest (14)
/* complex XSD type 'SyndwsadataRequest': */
struct SyndwsadataRequest {
      public:
        /** Required element 'requestVersion' of XSD type 'xsd:string' */
        std::string requestVersion;
        /** Required element 'requestCtxUUID' of XSD type 'xsd:string' */
        std::string requestCtxUUID;
        /** Required element 'requestUserCode' of XSD type 'xsd:string' */
        std::string requestUserCode;
        /** Required element 'requestUserPwd' of XSD type 'xsd:string' */
        std::string requestUserPwd;
        /** Required element 'requestUserName' of XSD type 'xsd:string' */
        std::string requestUserName;
        /** Required element 'requestAppCls' of XSD type 'xsd:string' */
        std::string requestAppCls;
        /** Required element 'requestAppInst' of XSD type 'xsd:string' */
        std::string requestAppInst;
      public:
        /** Return unique type id SOAP_TYPE_SyndwsadataRequest */
        int soap_type() const { return SOAP_TYPE_SyndwsadataRequest; }
        /** Constructor with member initializations */
        SyndwsadataRequest()
        {
        }
        /** Friend allocator used by soap_new_SyndwsadataRequest(struct soap*, int) */
        friend SOAP_FMAC1 SyndwsadataRequest * SOAP_FMAC2 soap_instantiate_SyndwsadataRequest(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:33 */
#ifndef SOAP_TYPE_ns__SyndwsadataResponse
#define SOAP_TYPE_ns__SyndwsadataResponse (17)
/* complex XSD type 'ns:SyndwsadataResponse': */
struct ns__SyndwsadataResponse {
      public:
        /** Optional element 'serviceResponse' of XSD type 'SyndwsadataResponse' */
        struct SyndwsadataResponse *serviceResponse;
      public:
        /** Return unique type id SOAP_TYPE_ns__SyndwsadataResponse */
        int soap_type() const { return SOAP_TYPE_ns__SyndwsadataResponse; }
        /** Constructor with member initializations */
        ns__SyndwsadataResponse()
        {
          serviceResponse = (struct SyndwsadataResponse *)0;
        }
        /** Friend allocator used by soap_new_ns__SyndwsadataResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns__SyndwsadataResponse * SOAP_FMAC2 soap_instantiate_ns__SyndwsadataResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:33 */
#ifndef SOAP_TYPE_ns__Syndwsadata
#define SOAP_TYPE_ns__Syndwsadata (18)
/* complex XSD type 'ns:Syndwsadata': */
struct ns__Syndwsadata {
      public:
        /** Required element 'request' of XSD type 'SyndwsadataRequest' */
        struct SyndwsadataRequest request;
      public:
        /** Return unique type id SOAP_TYPE_ns__Syndwsadata */
        int soap_type() const { return SOAP_TYPE_ns__Syndwsadata; }
        /** Constructor with member initializations */
        ns__Syndwsadata()
        {
        }
        /** Friend allocator used by soap_new_ns__Syndwsadata(struct soap*, int) */
        friend SOAP_FMAC1 ns__Syndwsadata * SOAP_FMAC2 soap_instantiate_ns__Syndwsadata(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:37 */
#ifndef SOAP_TYPE_SyndwsaTicketInfoRequest
#define SOAP_TYPE_SyndwsaTicketInfoRequest (19)
/* complex XSD type 'SyndwsaTicketInfoRequest': */
struct SyndwsaTicketInfoRequest {
      public:
        /** Required element 'wtCode' of XSD type 'xsd:string' */
        std::string wtCode;
        /** Required element 'wtPlanStartTime' of XSD type 'xsd:string' */
        std::string wtPlanStartTime;
        /** Required element 'wtPlanEndTime' of XSD type 'xsd:string' */
        std::string wtPlanEndTime;
        /** Optional element 'lstPropInfo' of XSD type 'PropInfoPojo' */
        std::vector<struct PropInfoPojo> lstPropInfo;
        /** Optional element 'lstTermInfo' of XSD type 'TermInfoPojo' */
        std::vector<struct TermInfoPojo> lstTermInfo;
      public:
        /** Return unique type id SOAP_TYPE_SyndwsaTicketInfoRequest */
        int soap_type() const { return SOAP_TYPE_SyndwsaTicketInfoRequest; }
        /** Constructor with member initializations */
        SyndwsaTicketInfoRequest()
        {
        }
        /** Friend allocator used by soap_new_SyndwsaTicketInfoRequest(struct soap*, int) */
        friend SOAP_FMAC1 SyndwsaTicketInfoRequest * SOAP_FMAC2 soap_instantiate_SyndwsaTicketInfoRequest(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:45 */
#ifndef SOAP_TYPE_SyndwsaTicketInfoResponse
#define SOAP_TYPE_SyndwsaTicketInfoResponse (20)
/* complex XSD type 'SyndwsaTicketInfoResponse': */
struct SyndwsaTicketInfoResponse {
      public:
        /** Required element 'responseVersion' of XSD type 'xsd:string' */
        std::string responseVersion;
        /** Required element 'requestCtxUUID' of XSD type 'xsd:string' */
        std::string requestCtxUUID;
        /** Required element 'responseCode' of XSD type 'xsd:string' */
        std::string responseCode;
        /** Required element 'responseExtCode' of XSD type 'xsd:string' */
        std::string responseExtCode;
        /** Required element 'responseMessage' of XSD type 'xsd:string' */
        std::string responseMessage;
      public:
        /** Return unique type id SOAP_TYPE_SyndwsaTicketInfoResponse */
        int soap_type() const { return SOAP_TYPE_SyndwsaTicketInfoResponse; }
        /** Constructor with member initializations */
        SyndwsaTicketInfoResponse()
        {
        }
        /** Friend allocator used by soap_new_SyndwsaTicketInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 SyndwsaTicketInfoResponse * SOAP_FMAC2 soap_instantiate_SyndwsaTicketInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:53 */
#ifndef SOAP_TYPE_ns__syndwsaTicketInfoResponse
#define SOAP_TYPE_ns__syndwsaTicketInfoResponse (23)
/* complex XSD type 'ns:syndwsaTicketInfoResponse': */
struct ns__syndwsaTicketInfoResponse {
      public:
        /** Optional element 'serviceResponse' of XSD type 'SyndwsaTicketInfoResponse' */
        struct SyndwsaTicketInfoResponse *serviceResponse;
      public:
        /** Return unique type id SOAP_TYPE_ns__syndwsaTicketInfoResponse */
        int soap_type() const { return SOAP_TYPE_ns__syndwsaTicketInfoResponse; }
        /** Constructor with member initializations */
        ns__syndwsaTicketInfoResponse()
        {
          serviceResponse = (struct SyndwsaTicketInfoResponse *)0;
        }
        /** Friend allocator used by soap_new_ns__syndwsaTicketInfoResponse(struct soap*, int) */
        friend SOAP_FMAC1 ns__syndwsaTicketInfoResponse * SOAP_FMAC2 soap_instantiate_ns__syndwsaTicketInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:53 */
#ifndef SOAP_TYPE_ns__syndwsaTicketInfo
#define SOAP_TYPE_ns__syndwsaTicketInfo (24)
/* complex XSD type 'ns:syndwsaTicketInfo': */
struct ns__syndwsaTicketInfo {
      public:
        /** Required element 'request' of XSD type 'SyndwsaTicketInfoRequest' */
        struct SyndwsaTicketInfoRequest request;
      public:
        /** Return unique type id SOAP_TYPE_ns__syndwsaTicketInfo */
        int soap_type() const { return SOAP_TYPE_ns__syndwsaTicketInfo; }
        /** Constructor with member initializations */
        ns__syndwsaTicketInfo()
        {
        }
        /** Friend allocator used by soap_new_ns__syndwsaTicketInfo(struct soap*, int) */
        friend SOAP_FMAC1 ns__syndwsaTicketInfo * SOAP_FMAC2 soap_instantiate_ns__syndwsaTicketInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* add.h:56 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (25)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header()
        {
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Header(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* add.h:56 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (26)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XSD type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code()
        {
          SOAP_ENV__Value = (char *)0;
          SOAP_ENV__Subcode = (struct SOAP_ENV__Code *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Code(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* add.h:56 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (28)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_T assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail()
        {
          __any = (char *)0;
          __type = 0;
          fault = NULL;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Detail(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* add.h:56 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (31)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XSD type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason()
        {
          SOAP_ENV__Text = (char *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Reason(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* add.h:56 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (32)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XSD type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XSD type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XSD type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XSD type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XSD type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XSD type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XSD type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XSD type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        int soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault()
        {
          faultcode = (char *)0;
          faultstring = (char *)0;
          faultactor = (char *)0;
          detail = (struct SOAP_ENV__Detail *)0;
          SOAP_ENV__Code = (struct SOAP_ENV__Code *)0;
          SOAP_ENV__Reason = (struct SOAP_ENV__Reason *)0;
          SOAP_ENV__Node = (char *)0;
          SOAP_ENV__Role = (char *)0;
          SOAP_ENV__Detail = (struct SOAP_ENV__Detail *)0;
        }
        /** Friend allocator used by soap_new_SOAP_ENV__Fault(struct soap*, int) */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* import/stlvector.h:53 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* import/stlvector.h:53 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* std::string has binding name 'std__string' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (9)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (32)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (31)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (28)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (26)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (25)
#endif

/* struct ns__syndwsaTicketInfo has binding name 'ns__syndwsaTicketInfo' for type 'ns:syndwsaTicketInfo' */
#ifndef SOAP_TYPE_ns__syndwsaTicketInfo
#define SOAP_TYPE_ns__syndwsaTicketInfo (24)
#endif

/* struct ns__syndwsaTicketInfoResponse has binding name 'ns__syndwsaTicketInfoResponse' for type 'ns:syndwsaTicketInfoResponse' */
#ifndef SOAP_TYPE_ns__syndwsaTicketInfoResponse
#define SOAP_TYPE_ns__syndwsaTicketInfoResponse (23)
#endif

/* struct SyndwsaTicketInfoResponse has binding name 'SyndwsaTicketInfoResponse' for type 'SyndwsaTicketInfoResponse' */
#ifndef SOAP_TYPE_SyndwsaTicketInfoResponse
#define SOAP_TYPE_SyndwsaTicketInfoResponse (20)
#endif

/* struct SyndwsaTicketInfoRequest has binding name 'SyndwsaTicketInfoRequest' for type 'SyndwsaTicketInfoRequest' */
#ifndef SOAP_TYPE_SyndwsaTicketInfoRequest
#define SOAP_TYPE_SyndwsaTicketInfoRequest (19)
#endif

/* struct ns__Syndwsadata has binding name 'ns__Syndwsadata' for type 'ns:Syndwsadata' */
#ifndef SOAP_TYPE_ns__Syndwsadata
#define SOAP_TYPE_ns__Syndwsadata (18)
#endif

/* struct ns__SyndwsadataResponse has binding name 'ns__SyndwsadataResponse' for type 'ns:SyndwsadataResponse' */
#ifndef SOAP_TYPE_ns__SyndwsadataResponse
#define SOAP_TYPE_ns__SyndwsadataResponse (17)
#endif

/* struct SyndwsadataRequest has binding name 'SyndwsadataRequest' for type 'SyndwsadataRequest' */
#ifndef SOAP_TYPE_SyndwsadataRequest
#define SOAP_TYPE_SyndwsadataRequest (14)
#endif

/* struct SyndwsadataResponse has binding name 'SyndwsadataResponse' for type 'SyndwsadataResponse' */
#ifndef SOAP_TYPE_SyndwsadataResponse
#define SOAP_TYPE_SyndwsadataResponse (11)
#endif

/* struct TermInfoPojo has binding name 'TermInfoPojo' for type 'TermInfoPojo' */
#ifndef SOAP_TYPE_TermInfoPojo
#define SOAP_TYPE_TermInfoPojo (10)
#endif

/* struct PropInfoPojo has binding name 'PropInfoPojo' for type 'PropInfoPojo' */
#ifndef SOAP_TYPE_PropInfoPojo
#define SOAP_TYPE_PropInfoPojo (8)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (34)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (33)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (27)
#endif

/* struct SyndwsaTicketInfoResponse * has binding name 'PointerToSyndwsaTicketInfoResponse' for type 'SyndwsaTicketInfoResponse' */
#ifndef SOAP_TYPE_PointerToSyndwsaTicketInfoResponse
#define SOAP_TYPE_PointerToSyndwsaTicketInfoResponse (21)
#endif

/* struct SyndwsadataResponse * has binding name 'PointerToSyndwsadataResponse' for type 'SyndwsadataResponse' */
#ifndef SOAP_TYPE_PointerToSyndwsadataResponse
#define SOAP_TYPE_PointerToSyndwsadataResponse (15)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/* std::vector<struct TermInfoPojo>  has binding name 'std__vectorTemplateOfTermInfoPojo' for type 'TermInfoPojo' */
#ifndef SOAP_TYPE_std__vectorTemplateOfTermInfoPojo
#define SOAP_TYPE_std__vectorTemplateOfTermInfoPojo (13)
#endif

/* std::vector<struct PropInfoPojo>  has binding name 'std__vectorTemplateOfPropInfoPojo' for type 'PropInfoPojo' */
#ifndef SOAP_TYPE_std__vectorTemplateOfPropInfoPojo
#define SOAP_TYPE_std__vectorTemplateOfPropInfoPojo (12)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__Syndwsadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct SyndwsadataRequest request, struct SyndwsadataResponse *serviceResponse);
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__syndwsaTicketInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct SyndwsaTicketInfoRequest request, struct SyndwsaTicketInfoResponse *serviceResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns__Syndwsadata' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns__Syndwsadata(struct soap*, struct SyndwsadataRequest request, struct SyndwsadataResponse *serviceResponse);
    /** Web service operation 'ns__syndwsaTicketInfo' (returns SOAP_OK or error code) */
    SOAP_FMAC5 int SOAP_FMAC6 ns__syndwsaTicketInfo(struct soap*, struct SyndwsaTicketInfoRequest request, struct SyndwsaTicketInfoResponse *serviceResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__Syndwsadata(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__syndwsaTicketInfo(struct soap*);

#endif

/* End of soapStub.h */
